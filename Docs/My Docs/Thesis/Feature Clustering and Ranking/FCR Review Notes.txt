FCR weaknesses:
1) Dendrogram and manual threshold selection
2) Ranking of clusters is suboptimal 
3) Linear correlation similarity measure is limited 
4) 

Improvents
1) Use AP with MI (?) - we need a better discrete MI with just 10 bins though.  Distances are only calc once and only between ind objects
2) a) Branch and bound on exemplar features
   b) Forward Sel or JMI type on exemplar features (JMI was tested already and we know it did bad overall, so rather use forward / backward selection)
   c) LASSO on exemplars from all clusters (this is like a simiplified version of MultiviewFS that assumes the clustering adequately captures redundancy and that a lin feature-label dependency is a good idea)
3) See https://www.mathworks.com/matlabcentral/fileexchange/30998-kernel-estimate-for--conditional--mutual-information    
   
   
Feature comparison to do
-------------------------
x - Data bootstraps must be identical for each method - with parfor, this may mean not using gendat
  also note that bootstraps should be sampling with replacement whereas gendat([], 0.5) is not sampling with replacement 
x - consider tryinh naivebc with >10 bins or with a density estimator    
   
Review 2 To Do
----------------
x - Compare AP with single pref param to hierarchical clustering 
- Compare hist MI to kernel MI for cluster ranking 
x - Do AP exemplar features work better than naivebc etc ranked features
x - Compare correlation to distance correlation (to kernelmi)
x - Consider other cluster rankings like performance on exemplar or distance correlation with class labs 
x - Dataset 2 should maybe only get 4 features 
x - Is min accuracy feature more stable than the exemplar 
x - Sometimes the the preferred features are not in the top ranked clusters.  Would a FS type formulation help this.  Or possibly branch and bound on exemplars.  
x - Can we speed things up for some fS algorithms by specifying the num features??  I think I didn't specify because something was needed for FsStabilityEval but this shouldn't be necessary anymore...

x - Include another fs method in the comparison 
- Consider restructuring intro along the lines of "Salient Band Selection for Hyperspectral Image Classification via Manifold Ranking" where method is introduced first, then related methods described
x - COuld a routine from ClustTools provide more stable prototypes than AP?  Could we exploit multilevel clustering somehow?  
x - make an experiment that just checks the stability of cluster modes 
- think about varying the num of features selected 
x - do a solid debug of the exemplars option to make sure the right features are making it through 
x - if we're using only acc of exemplar for ranking clusters and choosing feats, then we don't need to eval the feat criterion on each feat but only on each exemplar 
- rather than clustering on feature similarity, how about clustering on similarity of feat performance.  eg make the "features" to find dissimilarities on, a vector of the errors for each object found with eg a naivebc classifier.
the idea of this is that the exemplar may then be a better feature for classification than if we cluster purely on feature dissimilarities
x - what makes an examplar an exemplar?  
x - how does dcluste make a stable clustering but exemplar does not?  (because of a randreset bug)
x - do a thorough run through to make sure feat indices are getting through correctly 
- find an automated way to specify the threshold for hierarchical clustering 


Notes 
------------------
x - resFci gen with RenumClustAcrossBootstraps is done in CompareFsMethods for orig results. For latest code RenumClustAcrossBootstraps is done in BootstrapFsEval.  It is not done the same and this needs understanding.  OK, RenumClustAcrossBootstraps does what it says and does not change FeatIdx and stability measures.  There is falsed out code in BootstrapFsEval and CompareFsMethods, that assigned the renumbered clust idx to feat idx.  This is what (should) improves the stability measures.
- BootstrapFsEval in an older MSC version possibly uses same data for subData1 and subData2 - but the latest version does not... YES - the orig uses same data for both sets 
- I get close to the orig (CompareFsMethodsHs3) accuracies when I use BootstrapFsEval with subData1==subData2.  The stabilities for the first 3 data sets are also close, the last three with >100 features less so.  The bootstraps are obviously/apparently different.  That together with >100 features I think explains the stability anomaly.
x - The stabilities in resFci in CompareFsMethodsHs3.mat are better than the resFci generated by the code segment in CompareFsMethods.  This is dubious and needs understanding...
x - The stabilities in resFci in CompareFsMethodsHs4.mat (which is where the actual paper results come from) do not have this anomaly i.e. resFci gen in CompareFsMethods = resFci from CompareFsMethodsHs4.mat
x - resFci from CompareFsMethodsHs4.mat has a FeatIdx_ field, which comes from CompareFsMethodsHs4.mat
x - Digging into CompareFsMethodsHs4.mat, I see res.FsMapping which contains version which tells you the date (of training) = 6 Oct 2016, and prtools version: 5.3.1.  This matches the current prtools, but does not match the code date I have been comparing against! 
- NB remember to set innerMethods
- FCR-ap-mi-nopref has best stability&accuracy of any FCR option tried so far (with clust acc = acc(exemplar) and bestFeat = exemplar).  Naivebc25 is not necessarily better than naivebc.  FCR-ap-naivebc-nopref is also good.
- clust acc = min acc and clust acc = acc(exemplar) are similar / identical 
- best feat = min acc and best feat = exemplat are similar / identical 
- using mi instead of correlation for clustering makes things worse 
- NB distcorr works ok as a feature importance measure and gives the best stability of any option w/o featidx=clustidx (NB), but mi is more accurate and faster 
- NB FCR-ap-mi-nopref has similar stability to JMI w/o featidx=clustidx, which sadly means we are in reality not actually bettering JMI for stability.  But, FCR-ap-mi-nopref with jmiFormulation/fsFormulation does improve on JMI stability w/o featidx=clustidx.  And also see note above.   
- NB due to a bug in the code, the exemplars weren't being used for best clust or best feat for evals 1-12 below.  When I do use them, the stability improves dramatically, but the accuracy decreases a bit.   
- An exp with ClustTools showed dcluste (~ap) to have best stability - it is actually very robust to bootstrapped data.  The same does not quite apply to apcluster somehow.  The reclustering etc done by dcluste somehow improves stability significantly.
- for the botswana dataset, ap does significantly worse than heirarchical unless we decrease the num of clusters with pref (eg pref = 0.4 with exemplar) 
NB - WRT performance of AP clustering using A) the exemplars as clust acc and best feats B) median(feats) as clust acc and min(clust feats) as best feats:
    - A has the best stability performance but not the best accuracy due largeley to performance on dataset 4, "urban land cover".  B does well overall and beats the orig heirarchical formulation.  The problem with A and dataset 4 does not appear to be with the actual clusters (B has identical clusters and does well), nor with the cluster ranking (ranking on median(feat Acc) or fsFormulation did not help improve accuracy on dataset 4), but rather with the choice of best feat i.e., when we change this to be min(clust feats) even with clust acc still the exemplar acc, we get a much better accuracy.  I have not found a way around this.  

Notes
------
- Min accuracy vs exemplar vs median accuracy to rank features from each cluster:
  - for the first 3 datasets, min accuracy is more stable (we get consistency of 1 with feature not cluster indices), 
  for the last 3 datasets, it is not more stable
- Exemplar feature 
x - RenumClustAcrossBootstraps is done in BootstrapFsEval - the stuff in CompareFsMethods should not really be necessary - but this changes things, so what is going on?
x - Naivebc with more bins improves things across all data seemingly - not always
~ - One should NOT call RenumClustAcrossBootstraps > 1x
- NB Something is very wrong with FeatIdx (and therefore stability measures) of featself-mi in the orig results: CompareFsMethodsHs4.mat.  Latest results do not share this problem 


Intro Structure
---------------------
A Why do we need feature reduction?
B Differences between feature selection and feature extraction 
C Overview of feature selection (ranking, forward selection and backward elimination)
D Filter / wrapper / embedded 
E Intro to redundancy (it exists in RS data)
F Redundancy causes instability and sub-optimality 
G Related methods that deal with redundancy and stability 
H The need to consider measurement and computation costs 
I Intro to FCR and the study (positioning and contributions)



Some results
---------------
1) (with clust acc = acc(exemplar) and bestFeat = exemplar for ap version) 
    'Method'                     'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi'                   [   0.7894]    [  0.8703]    [    1.6088]    [ 0.6859]
    'FCR-H-naivebc-nopref'       [   0.4967]    [  0.8665]    [   18.6990]    [ 0.4357]
    'FCR-ap-naivebc'             [   0.6847]    [  0.8766]    [   18.0368]    [ 0.5982]
    'FCR-ap-naivebc25'           [   0.6550]    [  0.8726]    [   18.2097]    [ 0.5716]
    'FCR-ap-naivebc25-nopref'    [   0.4580]    [  0.8750]    [   17.7451]    [ 0.4050]	
(featidx = clustidx)
    'Method'                     'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi'                   [   0.9448]    [  0.8703]    [    1.6088]    [ 0.8242]
    'FCR-H-naivebc-nopref'       [   0.8759]    [  0.8665]    [   18.6990]    [ 0.7627]
    'FCR-ap-naivebc'             [   0.9432]    [  0.8766]    [   18.0368]    [ 0.8287]
    'FCR-ap-naivebc25'           [   0.9374]    [  0.8726]    [   18.2097]    [ 0.8199]
    'FCR-ap-naivebc25-nopref'    [   0.9838]    [  0.8750]    [   17.7451]    [ 0.8616]
2) (with clust acc = acc(exemplar) and bestFeat = exemplar for ap version) 
    'Method'                     'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi'                   [   0.7894]    [  0.8703]    [    1.6042]    [ 0.6859]
    'FCR-ap-naivebc25-nopref'    [   0.4275]    [  0.8770]    [   18.5773]    [ 0.3777]
    'FCR-ap-mi'                  [   0.7622]    [  0.8771]    [    0.7470]    [ 0.6668]
    'FCR-ap-mi-nopref'           [   0.6301]    [  0.8812]    [    0.7081]    [ 0.5551]
(featidx = clustidx)
    'Method'                     'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi'                   [   0.9448]    [  0.8703]    [    1.6042]    [ 0.8242]
    'FCR-ap-naivebc25-nopref'    [   0.9601]    [  0.8770]    [   18.5773]    [ 0.8435]
    'FCR-ap-mi'                  [   0.9772]    [  0.8771]    [    0.7470]    [ 0.8579]
    'FCR-ap-mi-nopref'           [   0.9838]    [  0.8812]    [    0.7081]    [ 0.8675]
3) (with clust acc = acc(exemplar) and bestFeat = exemplar for ap version) 
    'Method'                  'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi'                [   0.7894]    [  0.8703]    [    1.6437]    [ 0.6859]
    'FCR-ap-mi-nopref'        [   0.5977]    [  0.8798]    [    0.7321]    [ 0.5255]
    'FCR-ap-mi-jmi-nopref'    [   0.6478]    [  0.8795]    [    0.7711]    [ 0.5703]
(featidx = clustidx)
    'Method'                  'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi'                [   0.9448]    [  0.8703]    [    1.6437]    [ 0.8242]
    'FCR-ap-mi-nopref'        [        1]    [  0.8798]    [    0.7321]    [ 0.8798]
    'FCR-ap-mi-jmi-nopref'    [   0.9487]    [  0.8795]    [    0.7711]    [ 0.8364]
4) 	(with clust acc = min acc and bestFeat = exemplar for ap version) 
    'Method'              'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi'            [   0.7894]    [  0.8703]    [    1.6153]    [ 0.6859]
    'FCR-ap-mi-nopref'    [   0.5977]    [  0.8798]    [    0.7494]    [ 0.5255]
(featidx = clustidx)
    'Method'              'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi'            [   0.9448]    [  0.8703]    [    1.6153]    [ 0.8242]
    'FCR-ap-mi-nopref'    [        1]    [  0.8798]    [    0.7494]    [ 0.8798]
5) 	(with clust acc = min acc and bestFeat = exemplar for ap version) 
    'Method'              'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi'            [   0.7894]    [  0.8703]    [    1.6329]    [ 0.6859]
    'FCR-ap-mi-nopref'    [   0.5977]    [  0.8798]    [    0.7523]    [ 0.5255]
(featidx = clustidx)
    'Method'              'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi'            [   0.9448]    [  0.8703]    [    1.6329]    [ 0.8242]
    'FCR-ap-mi-nopref'    [        1]    [  0.8798]    [    0.7523]    [ 0.8798]
6)   (with clust acc = min acc and bestFeat = exemplar for ap version and fsFormulation) 
    'Method'              'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi'            [   0.7894]    [  0.8703]    [    1.5186]    [ 0.6859]
    'FCR-ap-mi-nopref'    [   0.5459]    [  0.8585]    [    1.2627]    [ 0.4727]
(featidx = clustidx)
    'Method'              'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi'            [   0.9448]    [  0.8703]    [    1.5186]    [ 0.8242]
    'FCR-ap-mi-nopref-fsform'    [   0.8228]    [  0.8585]    [    1.2627]    [ 0.7144]	
7)   (with clust acc = exemplar and bestFeat = exemplar for ap version and nmi diss. measure) 
    'Method'                'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi'              [   0.7894]    [  0.8703]    [    1.6503]    [ 0.6859]
    'FCR-apmi-mi-nopref'    [   0.5497]    [  0.8513]    [   20.6473]    [ 0.4757]
(featidx = clustidx)
    'Method'                'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi'              [   0.9448]    [  0.8703]    [    1.6503]    [ 0.8242]
    'FCR-apmi-mi-nopref'    [   0.8016]    [  0.8513]    [   20.6473]    [ 0.6878]
8)   (with clust acc = exemplar and bestFeat = exemplar for ap version and distcorr feat importance measure) 
    'Method'                    'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-ap-distcorr-nopref'    [   0.7545]    [  0.8538]    [   51.5610]    [ 0.6559]
(featidx = clustidx)
    'Method'                    'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-ap-distcorr-nopref'    [   0.9567]    [  0.8538]    [   51.5610]    [ 0.8211]
9) (with clust acc = min and bestFeat = min for ap version) 
    'Method'           'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-ap-nopref'    [   0.5977]    [  0.8798]    [    0.9000]    [ 0.5255]
    'JMI'              [   0.5999]    [  0.8600]    [    0.7191]    [ 0.5184]
    'featself-mi'      [   0.2541]    [  0.8763]    [   96.1781]    [ 0.2254]	
(JMI stability is actually as good as FCR w/o featidx = clustidx)
10) (with clust acc = min and bestFeat = min acc for ap version, fsFormulation with knn3 criterion - NB in this case we beat JMI) 
    'Method'                       'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-ap-nopref'                [   0.5977]    [  0.8798]    [    0.9173]    [ 0.5255]
    'FCR-ap-nopref-fsFormula…'    [   0.6371]    [  0.8836]    [  189.2528]    [ 0.5634]	
-------------details for 10 	
	Spekboom
		'Method'                  'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-ap-nopref'           [  0.7746]    [     0.8424]    [    0.9890]    [    1.4969]    [    0.9182]
		'FCR-ap-nopref-fsFo…'    [  0.7968]    [     0.8594]    [    0.8902]    [1.0794e+03]    [    0.9203]

	Synthetic
		'Method'                  'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-ap-nopref'           [  0.6952]    [     0.7230]    [    0.9987]    [    0.4022]    [    0.8978]
		'FCR-ap-nopref-fsFo…'    [  0.8000]    [     0.8300]    [    0.9628]    [   19.0328]    [    0.9018]

	Statlog Landsat
		'Method'                  'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-ap-nopref'           [       1]    [          1]    [         1]    [    0.5056]    [    0.8513]
		'FCR-ap-nopref-fsFo…'    [       1]    [          1]    [    0.9156]    [    3.2010]    [    0.8535]

	Urban Land Cover
		'Method'                  'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-ap-nopref'           [  0.3103]    [     0.4232]    [    0.9014]    [    0.9043]    [    0.8326]
		'FCR-ap-nopref-fsFo…'    [  0.2728]    [     0.3889]    [    0.5824]    [   19.1812]    [    0.8506]

	Botswana
		'Method'                  'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-ap-nopref'           [  0.1106]    [     0.1461]    [    0.9603]    [    0.9535]    [    0.9037]
		'FCR-ap-nopref-fsFo…'    [  0.1611]    [     0.2234]    [    0.2034]    [    5.7849]    [    0.9013]

	KSC
		'Method'                  'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-ap-nopref'           [  0.3302]    [     0.4512]    [    1.0000]    [    1.2413]    [    0.8752]
		'FCR-ap-nopref-fsFo…'    [  0.3959]    [     0.5206]    [    0.5681]    [    8.9590]    [    0.8744]

11) (with clust acc = exemplar and bestFeat = exemplar for ap version, jmiFormulation NB in this case we beat JMI and it is much faster than the above fsFormulation) 
    'Method'                       'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-ap-nopref'                [   0.5977]    [  0.8798]    [    0.8870]    [ 0.5255]
    'FCR-ap-nopref-jmiFormul…'    [   0.6478]    [  0.8795]    [    0.8379]    [ 0.5703]
-------------details for 11 	
	Spekboom
		'Method'                  'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-ap-nopref'           [  0.7746]    [     0.8424]    [    0.9890]    [    1.4807]    [    0.9182]
		'FCR-ap-nopref-jmiF…'    [  0.7968]    [     0.8594]    [    0.9313]    [    1.6057]    [    0.9203]

	Synthetic
		'Method'                  'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-ap-nopref'           [  0.6952]    [     0.7230]    [    0.9987]    [    0.3671]    [    0.8978]
		'FCR-ap-nopref-jmiF…'    [  0.8222]    [     0.8489]    [    0.9953]    [    0.3043]    [    0.9005]

	Statlog Landsat
		'Method'                  'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-ap-nopref'           [       1]    [          1]    [         1]    [    0.4974]    [    0.8513]
		'FCR-ap-nopref-jmiF…'    [       1]    [          1]    [    0.9600]    [    0.3720]    [    0.8535]

	Urban Land Cover
		'Method'                  'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-ap-nopref'           [  0.3103]    [     0.4232]    [    0.9014]    [    0.9450]    [    0.8326]
		'FCR-ap-nopref-jmiF…'    [  0.3710]    [     0.5031]    [    0.7457]    [    0.7888]    [    0.8261]

	Botswana
		'Method'                  'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-ap-nopref'           [  0.1106]    [     0.1461]    [    0.9603]    [    0.9466]    [    0.9037]
		'FCR-ap-nopref-jmiF…'    [  0.1636]    [     0.2273]    [    0.7140]    [    0.9518]    [    0.9006]

	KSC
		'Method'                  'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-ap-nopref'           [  0.3302]    [     0.4512]    [    1.0000]    [    1.0854]    [    0.8752]
		'FCR-ap-nopref-jmiF…'    [  0.3305]    [     0.4479]    [    0.9622]    [    1.0050]    [    0.8761]
		
12) (with clust acc = exemplar and bestFeat = exemplar for ap version, jmiFormulation NB in this case we beat JMI on stability and it is much faster than the above fsFormulation) 
    'Method'                       'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-ap-nopref'                [   0.5977]    [  0.8798]    [    0.8653]    [ 0.5255]
    'FCR-ap-nopref-jmiFormul…'    [   0.6478]    [  0.8795]    [    0.8528]    [ 0.5703]
    'JMI'                          [   0.5999]    [  0.8600]    [    0.6893]    [ 0.5184]
-------------details for 12
	Spekboom
		'Method'                  'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-ap-nopref'           [  0.7746]    [     0.8424]    [    0.9890]    [    1.5017]    [    0.9182]
		'FCR-ap-nopref-jmiF…'    [  0.7968]    [     0.8594]    [    0.9313]    [    1.6255]    [    0.9203]
		'JMI'                     [  0.6269]    [     0.7104]    [    0.9831]    [    1.4557]    [    0.8735]

	Synthetic
		'Method'                  'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-ap-nopref'           [  0.6952]    [     0.7230]    [    0.9987]    [    0.3552]    [    0.8978]
		'FCR-ap-nopref-jmiF…'    [  0.8222]    [     0.8489]    [    0.9953]    [    0.3228]    [    0.9005]
		'JMI'                     [       1]    [          1]    [    0.9847]    [    0.0698]    [    0.8800]

	Statlog Landsat
		'Method'                  'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-ap-nopref'           [       1]    [          1]    [         1]    [    0.4475]    [    0.8513]
		'FCR-ap-nopref-jmiF…'    [       1]    [          1]    [    0.9600]    [    0.3761]    [    0.8535]
		'JMI'                     [  0.7244]    [     0.8000]    [    0.9679]    [    0.1576]    [    0.8581]

	Urban Land Cover
		'Method'                  'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-ap-nopref'           [  0.3103]    [     0.4232]    [    0.9014]    [    0.8878]    [    0.8326]
		'FCR-ap-nopref-jmiF…'    [  0.3710]    [     0.5031]    [    0.7457]    [    0.7405]    [    0.8261]
		'JMI'                     [  0.2239]    [     0.3318]    [    0.9478]    [    0.4206]    [    0.8000]

	Botswana
		'Method'                  'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-ap-nopref'           [  0.1106]    [     0.1461]    [    0.9603]    [    0.9313]    [    0.9037]
		'FCR-ap-nopref-jmiF…'    [  0.1636]    [     0.2273]    [    0.7140]    [    0.9961]    [    0.9006]
		'JMI'                     [  0.1883]    [     0.2698]    [    0.9355]    [    0.8433]    [    0.8935]

	KSC
		'Method'                  'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-ap-nopref'           [  0.3302]    [     0.4512]    [    1.0000]    [    1.0682]    [    0.8752]
		'FCR-ap-nopref-jmiF…'    [  0.3305]    [     0.4479]    [    0.9622]    [    1.0560]    [    0.8761]
		'JMI'                     [  0.3608]    [     0.4876]    [    0.9411]    [    1.1886]    [    0.8547]

13) so like a real dumbass, none of the above "acc = exemplar and bestFeat = exemplar" weren't actually using the exemplars.  The below now does...		
    'Method'                       'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-ap-nopref'                [   0.8278]    [  0.8672]    [    0.9039]    [ 0.7206]
    'FCR-ap-nopref-jmiFormul…'    [   0.7013]    [  0.8245]    [    0.9454]    [ 0.6088]
    'JMI'                          [   0.5999]    [  0.8600]    [    0.6859]    [ 0.5184]
14) using dcluste 
    'Method'                       'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-ap-nopref'                [   0.9056]    [  0.8420]    [    3.6514]    [ 0.7624]
    'FCR-ap-nopref-jmiFormul…'    [   0.8892]    [  0.7915]    [    3.3000]    [ 0.7065]
    'JMI'                          [   0.5999]    [  0.8600]    [    0.6916]    [ 0.5184]

    'Method'                       'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-ap-nopref'                [   0.9308]    [  0.8338]    [    4.1088]    [ 0.7799]
    'FCR-ap-nopref-jmiFormul…'    [   0.8544]    [  0.7782]    [    3.9549]    [ 0.6677]
    'JMI'                          [   0.5999]    [  0.8600]    [    0.7153]    [ 0.5184]	
	
    'Method'                       'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-ap-nopref'                [   0.8278]    [  0.8672]    [    0.9399]    [ 0.7206]
    'FCR-ap-nopref-jmiFormul…'    [   0.8227]    [  0.8653]    [    0.8795]    [ 0.7177]
    'JMI'                          [   0.5999]    [  0.8600]    [    0.7165]    [ 0.5184]	
	
	with best clust = min acc and best feat = exemplar
	'Method'                       'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-ap-nopref'                [   0.8297]    [  0.8681]    [    0.9148]    [ 0.7229]
    'FCR-ap-nopref-jmiFormul…'    [   0.8227]    [  0.8653]    [    0.8602]    [ 0.7177]
    'JMI'                          [   0.5999]    [  0.8600]    [    0.6757]    [ 0.5184]
	
	with best clust = exemplar and best feat = exemplar
    'FCR-ap-naivebc-nopref'        [   0.7461]    [  0.8641]    [   21.2499]    [ 0.6508]
    'FCR-ap-naivebc-nopref-j…'    [   0.7679]    [  0.8638]    [   20.2687]    [ 0.6699]	
	
15) with clust acc = exemplar and best feat = exemplar, 

    'Method'              'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi'            [   0.7894]    [  0.8703]    [    1.9622]    [ 0.6859]
    'FCR-ap-mi-nopref'    [   0.8278]    [  0.8672]    [    0.8519]    [ 0.7206]
    'featself-naivebc'    [   0.2541]    [  0.8763]    [   98.7476]    [ 0.2254]
    'featself-mi'         [   0.4407]    [  0.8605]    [    3.3595]    [ 0.3883]
    'featseli-naivebc'    [   0.6631]    [  0.7955]    [   19.5070]    [ 0.5371]
    'featseli-mi'         [   0.7990]    [  0.7732]    [    1.0863]    [ 0.6220]
details 
	Spekboom
		'Method'              'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-H-mi'            [       1]    [          1]    [    0.9985]    [    1.9050]    [    0.9140]
		'FCR-ap-mi-nopref'    [  0.9000]    [     0.9233]    [    0.9836]    [    1.5218]    [    0.9332]
		'featself-naivebc'    [  0.3254]    [     0.3909]    [    0.3516]    [  116.6373]    [    0.9061]
		'featself-mi'         [  0.6249]    [     0.7189]    [    0.7249]    [    6.6711]    [    0.9068]
		'featseli-naivebc'    [       1]    [          1]    [    0.9945]    [   16.0853]    [    0.8191]
		'featseli-mi'         [       1]    [          1]    [    0.9992]    [    1.1193]    [    0.7376]

	Synthetic
		'Method'              'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-H-mi'            [       1]    [          1]    [    0.9991]    [    0.8126]    [    0.8973]
		'FCR-ap-mi-nopref'    [       1]    [          1]    [    0.9987]    [    0.2994]    [    0.8974]
		'featself-naivebc'    [  0.4856]    [     0.4711]    [    0.3955]    [   11.3000]    [    0.8988]
		'featself-mi'         [  0.6000]    [     0.6159]    [    0.5258]    [    0.4145]    [    0.9004]
		'featseli-naivebc'    [       1]    [          1]    [    0.9791]    [    2.7558]    [    0.8802]
		'featseli-mi'         [       1]    [          1]    [    0.9919]    [    0.2309]    [    0.8800]

	Statlog Landsat
		'Method'              'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-H-mi'            [       1]    [          1]    [         1]    [    1.2330]    [    0.8219]
		'FCR-ap-mi-nopref'    [       1]    [          1]    [         1]    [    0.4162]    [    0.8513]
		'featself-naivebc'    [  0.2258]    [     0.2562]    [    0.2308]    [   23.3352]    [    0.8602]
		'featself-mi'         [  0.2961]    [     0.3625]    [    0.3176]    [    0.6707]    [    0.8595]
		'featseli-naivebc'    [  0.5644]    [     0.6687]    [    0.9541]    [    6.5999]    [    0.7804]
		'featseli-mi'         [  0.9200]    [     0.9437]    [    0.9913]    [    0.4182]    [    0.8324]

	Urban Land Cover
		'Method'              'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-H-mi'            [  0.6444]    [     0.7716]    [    0.8808]    [    2.8379]    [    0.8161]
		'FCR-ap-mi-nopref'    [  0.5568]    [     0.6802]    [    0.8734]    [    0.8200]    [    0.7567]
		'featself-naivebc'    [  0.0847]    [     0.1205]    [    0.1174]    [   98.3030]    [    0.8161]
		'featself-mi'         [  0.0916]    [     0.1262]    [    0.1214]    [    2.1013]    [    0.7425]
		'featseli-naivebc'    [  0.2618]    [     0.3661]    [    0.8207]    [   28.7487]    [    0.7973]
		'featseli-mi'         [  0.4057]    [     0.5260]    [    0.9328]    [    1.3854]    [    0.7958]

	Botswana
		'Method'              'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-H-mi'            [  0.3079]    [     0.4243]    [    0.9621]    [    2.2355]    [    0.9078]
		'FCR-ap-mi-nopref'    [  0.4185]    [     0.5518]    [    0.9332]    [    0.9581]    [    0.8989]
		'featself-naivebc'    [  0.1289]    [     0.1848]    [    0.1793]    [  152.1223]    [    0.9146]
		'featself-mi'         [  0.2800]    [     0.3896]    [    0.3816]    [    4.2808]    [    0.9165]
		'featseli-naivebc'    [  0.3368]    [     0.4398]    [    0.8951]    [   30.2641]    [    0.6949]
		'featseli-mi'         [  0.7376]    [     0.8300]    [    0.9607]    [    1.5914]    [    0.6605]

	KSC
		'Method'              'Tanimoto'    'Consistency'    'SpearmanCC'    'FsDuration'    'ClfMeanAcc'
		'FCR-H-mi'            [  0.4005]    [     0.5405]    [    0.9732]    [    2.7490]    [    0.8645]
		'FCR-ap-mi-nopref'    [  0.7148]    [     0.8116]    [    0.9800]    [    1.0960]    [    0.8658]
		'featself-naivebc'    [  0.0780]    [     0.1007]    [    0.0969]    [  190.7876]    [    0.8618]
		'featself-mi'         [  0.3035]    [     0.4314]    [    0.4365]    [    6.0184]    [    0.8376]
		'featseli-naivebc'    [  0.3676]    [     0.5041]    [    0.9065]    [   32.5882]    [    0.8012]
		'featseli-mi'         [  0.3631]    [     0.4942]    [    0.9892]    [    1.7725]    [    0.7328]
 
 16) using apClusterCrit=nmi with exemplar clustering 

    'Method'              'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi-nopref'     [   0.6543]    [  0.8767]    [    2.0138]    [ 0.5770]
    'FCR-ap-mi-nopref'    [   0.5502]    [  0.8517]    [   25.7386]    [ 0.4822]
	
---- 
pref=0.2 with exemplar
     'Method'              'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi-nopref'     [   0.6543]    [  0.8767]    [    1.9732]    [ 0.5770]
    'FCR-ap-mi-nopref'    [   0.7772]    [  0.8542]    [    1.0331]    [ 0.6701]
	
pref=0.1 with exemplar
    'Method'              'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi-nopref'     [   0.6543]    [  0.8767]    [    2.1582]    [ 0.5770]
    'FCR-ap-mi-nopref'    [   0.7349]    [  0.8470]    [    1.0727]    [ 0.6296]	

17) fsFormulation with naivebc 	
    'Method'                       'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-ap-naivebc25-nopref'      [   0.8226]    [  0.8661]    [    3.2340]    [ 0.7172]
    'FCR-ap-naivebc25-nopref-fsFormulation'    [   0.7333]    [  0.8580]    [   15.6934]    [ 0.6376]

18) Back to basics - using apcluster and not ClustTools
with feat idx = clust idx 
    'Method'            'Stability'    'Accuracy'    'FsDuration'    'Overall'
    'FCR-H-mi'          [   0.9448]    [  0.8767]    [    1.9062]    [ 0.8306]
    'FCR-ap-mi'         [   0.9753]    [  0.8677]    [    0.3544]    [ 0.8490]
    'FCR-ap-mi-noex'    [   0.9744]    [  0.8809]    [    0.8566]    [ 0.8589]
details 	
	Spekboom
		'Method'            'Tanimoto'    'Consistency'    'SpearmanCC'    'Duration'    'ClfMeanAcc'
		'FCR-H-mi'          [       1]    [          1]    [    0.9985]    [  1.8813]    [    0.9214]
		'FCR-ap-mi'         [       1]    [          1]    [    0.9861]    [  0.7470]    [    0.9346]
		'FCR-ap-mi-noex'    [       1]    [          1]    [    0.9891]    [  1.4383]    [    0.9203]

	Synthetic
		'Method'            'Tanimoto'    'Consistency'    'SpearmanCC'    'Duration'    'ClfMeanAcc'
		'FCR-H-mi'          [       1]    [          1]    [    0.9991]    [  0.7919]    [    0.8977]
		'FCR-ap-mi'         [       1]    [          1]    [    0.9987]    [  0.2795]    [    0.8974]
		'FCR-ap-mi-noex'    [  0.9333]    [     0.9433]    [    0.9950]    [  0.2865]    [    0.8986]

	Statlog Landsat
		'Method'            'Tanimoto'    'Consistency'    'SpearmanCC'    'Duration'    'ClfMeanAcc'
		'FCR-H-mi'          [       1]    [          1]    [         1]    [  1.1187]    [    0.8524]
		'FCR-ap-mi'         [       1]    [          1]    [         1]    [  0.2615]    [    0.8513]
		'FCR-ap-mi-noex'    [       1]    [          1]    [         1]    [  0.3799]    [    0.8509]

	Urban Land Cover
		'Method'            'Tanimoto'    'Consistency'    'SpearmanCC'    'Duration'    'ClfMeanAcc'
		'FCR-H-mi'          [  0.6800]    [     0.7944]    [    0.8808]    [  2.6354]    [    0.8165]
		'FCR-ap-mi'         [  0.7748]    [     0.8515]    [    0.8746]    [  0.3367]    [    0.7536]
		'FCR-ap-mi-noex'    [  0.8489]    [     0.9029]    [    0.9011]    [  0.8847]    [    0.8341]

	Botswana
		'Method'            'Tanimoto'    'Consistency'    'SpearmanCC'    'Duration'    'ClfMeanAcc'
		'FCR-H-mi'          [       1]    [          1]    [    0.9621]    [  2.2902]    [    0.9078]
		'FCR-ap-mi'         [       1]    [          1]    [    0.8309]    [  0.2235]    [    0.9018]
		'FCR-ap-mi-noex'    [       1]    [          1]    [    0.9635]    [  1.0360]    [    0.9056]

	KSC
		'Method'            'Tanimoto'    'Consistency'    'SpearmanCC'    'Duration'    'ClfMeanAcc'
		'FCR-H-mi'          [  0.7938]    [     0.8744]    [    0.9732]    [  2.7199]    [    0.8645]
		'FCR-ap-mi'         [       1]    [          1]    [    0.9832]    [  0.2780]    [    0.8673]
		'FCR-ap-mi-noex'    [       1]    [          1]    [    1.0000]    [  1.1143]    [    0.8757]	
	
-----------------------------------------------------------------------------------------------------------------------	

Letter to editor:   

Dear Prof. Warner

I would like to submit a revision of the manuscript entitled “Feature Clustering and Ranking for Selecting Stable Features from High Dimensional Remotely Sensed Data” for possible publication in the International Journal of Remote Sensing.  While I realise that the original manuscript was officially rejected, I believe we have addressed the referees' concerns, as I describe below.  I hope that you will reconsider this submission.  

In response to concerns about the novelty of the manuscript, I would like to highlight the following:
1) To the best of my knowledge, the problem of instability that occurs when selecting features from data containing redundancy has not been explicity addressed or quantified in a remote sensing context.  Our method aims to remove feature redundancy, and therefore the resultant instability, through the clustering step.  We demonstrate the success of this on remote sensing data, using a quantitative measure of stability.  
2) While related methods exist, the feature clustering and ranking (FCR) method (which combines hierarchical clustering for redundancy isolation, and naive Bayes or mutual information criteria for identifying relevance) has not been previously published, to the best of our knowledge.  The combination of techniques used in FCR has some specific advantages: 
   1) Hierarchical clustering is deterministic, fast and does not require prior knowledge of the number of clusters.  2) The relevance criteria do not make assumptions of linear dependence between features and class labels, as is the case with structured sparsity approaches.  
3) Our method is distinct in that it allows factors such as computation time and measurement cost to be considered, in addition to relevance, when selecting features from correlated clusters.
4) There are very few studies that address feature selection in the context of remote sensing in general.  

I believe we have addressed the referees' comments around recently proposed feature selection approaches, structured sparisty regularisation, and the Chen et al (2017) paper, "Supervised Multiview Feature Selection Exploring Homogeneity and Heterogeneity With l1,2-Norm and Automatic View Generation".  Specifically, we have differentiated our method from the general approach of structured sparisty regularisation, and the  Multiview Feature Selection (MultiviewFS) technique of Chen et el (2017).  In summary: 
1) Structured sparsity regularisation approaches minimise an objective function that assumes a linear dependence between features and class labels.  FCR uses a ranking heuristic to select features that does not make assumptions of linearity.
2) MultiviewFS performs redundant feature clustering using a Euclidean distance measure while FCR uses correlation.  Euclidean distance describes feature similarity or proximity, while correlation is a broader description of redundancy that captures general linear dependence.  
Other points raised by the referees have also been accommodated to in the revised manuscript.

I hope that this revision 

The attention to and quantification of stability has not been addressed in any remote sensing journal that I have seen.  The combination of hierarchical clustering and naive Bayes criterion has also never been published, although feature selection methods with other forms of clustering and importance measure have been published.  It also has an element of novelty in that it compares traditional methods on remote sensing data sets which has only been done in a few papers that I have seen and not with the methods or data in my paper.  Admittedly, it is far from revolutionary, but don't these things make it novel enough?

